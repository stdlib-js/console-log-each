// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.2.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-resolve-getter@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/console-log@v0.2.0-esm/index.mjs";function n(n){var o,l,h,m,d,p,a,u,g,f,v;if(!s(n))throw new TypeError(r("invalid argument. First argument must be a string. Value: `%s`.",n));for(d=arguments.length,h=[],o=[],p=[],f=1;f<d;f++){if(e(u=arguments[f])){h.push(t(u)),p.push(u),o.push(1),a=u.length,f+=1;break}u=[u],h.push(t(u)),p.push(u),o.push(0)}for(void 0===a&&(a=1);f<d;f++){if(e(u=arguments[f])){if(u.length!==a)throw new RangeError("invalid argument. Provided collections must have the same length.");g=1}else u=[u],g=0;h.push(t(u)),p.push(u),o.push(g)}for(m=[n],l=[],f=1;f<d;f++)m.push(null),l.push(0);for(f=0;f<a;f++){for(v=0;v<d-1;v++)m[v+1]=h[v](p[v],l[v]),l[v]+=o[v];i(r.apply(null,m))}}export{n as default};
//# sourceMappingURL=index.mjs.map
