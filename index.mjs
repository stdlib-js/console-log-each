// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as s}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-string@v0.1.1-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@v0.1.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-accessors@v0.1.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/console-log@v0.1.1-esm/index.mjs";function n(n){var o,l,h,m,d,a,p,u,c,f,g,v;if(!s(n))throw new TypeError(r("invalid argument. First argument must be a string. Value: `%s`.",n));for(d=arguments.length,h=[],o=[],a=[],g=1;g<d;g++){if(e(u=arguments[g])){f=t(u),h.push(f.accessors[0]),a.push(u),o.push(1),p=u.length,g+=1;break}f=t(u=[u]),h.push(f.accessors[0]),a.push(u),o.push(0)}for(void 0===p&&(p=1);g<d;g++){if(e(u=arguments[g])){if(u.length!==p)throw new RangeError("invalid argument. Provided collections must have the same length.");c=1}else u=[u],c=0;f=t(u),h.push(f.accessors[0]),a.push(u),o.push(c)}for(m=[n],l=[],g=1;g<d;g++)m.push(null),l.push(0);for(g=0;g<p;g++){for(v=0;v<d-1;v++)m[v+1]=h[v](a[v],l[v]),l[v]+=o[v];i(r.apply(null,m))}}export{n as default};
//# sourceMappingURL=index.mjs.map
