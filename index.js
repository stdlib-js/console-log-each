// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(e){"use strict";var t="function"==typeof Object.defineProperty?Object.defineProperty:null,r=Object.defineProperty,o=Object.prototype,n=o.toString,l=o.__defineGetter__,i=o.__defineSetter__,u=o.__lookupGetter__,a=o.__lookupSetter__,c=function(){try{return t({},"x",{}),!0}catch(e){return!1}}()?r:function(e,t,r){var c,f,p,y;if("object"!=typeof e||null===e||"[object Array]"===n.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+r+"`.");if((f="value"in r)&&(u.call(e,t)||a.call(e,t)?(c=e.__proto__,e.__proto__=o,delete e[t],e[t]=r.value,e.__proto__=c):e[t]=r.value),p="get"in r,y="set"in r,f&&(p||y))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return p&&l&&l.call(e,t,r.get),y&&i&&i.call(e,t,r.set),e};function f(e,t,r){c(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})}function p(e){return"string"==typeof e}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function s(){return y&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString,h=Object.prototype.hasOwnProperty,g="function"==typeof Symbol?Symbol.toStringTag:"",d=s()?function(e){var t,r,o,n,l;if(null==e)return b.call(e);r=e[g],l=g,t=null!=(n=e)&&h.call(n,l);try{e[g]=void 0}catch(t){return b.call(e)}return o=b.call(e),t?e[g]=r:delete e[g],o}:function(e){return b.call(e)},_=String.prototype.valueOf,v=s();function m(e){return"object"==typeof e&&(e instanceof String||(v?function(e){try{return _.call(e),!0}catch(e){return!1}}(e):"[object String]"===d(e)))}function j(e){return p(e)||m(e)}f(j,"isPrimitive",p),f(j,"isObject",m);var S=Math.floor;function w(e){return"object"==typeof e&&null!==e&&"number"==typeof e.length&&(t=e.length,S(t)===t)&&e.length>=0&&e.length<=9007199254740991;var t}function O(){var e,t=arguments,r=t[0],o="https://stdlib.io/e/"+r+"?";for(e=1;e<t.length;e++)o+="&arg[]="+encodeURIComponent(t[e]);return o}var P=e,T=P.log;function E(){T.apply(P,arguments)}return function(e){var t,r,o,n,l,i,u,a,c,f;if(!p(e))throw new TypeError(O("null3R",e));for(n=arguments.length,t=[],l=[],c=1;c<n;c++){if(w(u=arguments[c])){l.push(u),t.push(1),i=u.length,c+=1;break}l.push([u]),t.push(0)}for(void 0===i&&(i=1);c<n;c++){if(w(u=arguments[c])){if(u.length!==i)throw new RangeError("invalid argument. Provided collections must have the same length.");a=1}else u=[u],a=0;l.push(u),t.push(a)}for(o=[e],r=[],c=1;c<n;c++)o.push(null),r.push(0);for(c=0;c<i;c++){for(f=0;f<n-1;f++)o[f+1]=l[f][r[f]],r[f]+=t[f];E(O.apply(null,o))}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("console")):"function"==typeof define&&define.amd?define(["console"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).logEach=t(e.require$$0);
//# sourceMappingURL=index.js.map
